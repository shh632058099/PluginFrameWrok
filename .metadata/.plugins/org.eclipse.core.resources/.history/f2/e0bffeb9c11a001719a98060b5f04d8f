#pragma once

#include "Export.h"

class CControllerBase;
class CViewBase;

class PLUGINCORE_API Module
{
public:
	explicit Module(const std::string &strName);
	virtual ~Module(void);

	virtual bool Load() = 0;

	virtual bool UnLoad() = 0;

	//返回插件名字，带后缀，如dll等
	virtual std::string GetFileName() const = 0;

	//返回插件的名字，不带后缀
	virtual std::string GetDisplayName() const = 0;


private:
	Module(const Module &rhs);
	const Module &operator=(const Module &rhs);

private:
	CControllerBase *m_pController;
	CViewBase *m_pView;

};

//插件加载和卸载时调用的函数
typedef Module *( *START_PLUGIN_FUN )();
typedef void( *STOP_PLUGIN_FUN )();

